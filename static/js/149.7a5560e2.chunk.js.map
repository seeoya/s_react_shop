{"version":3,"file":"static/js/149.7a5560e2.chunk.js","mappings":"4UAuCA,EAnC2BA,EAAAA,YAAiB,WAWzCC,GAAQ,IAVTC,EAUS,EAVTA,SACAC,EASS,EATTA,UACAC,EAQS,EARTA,QACAC,EAOS,EAPTA,SACAC,EAMS,EANTA,WACAC,EAKS,EALTA,MACAC,EAIS,EAJTA,KACAC,EAGS,EAHTA,QACAC,EAES,EAFTA,WACGC,GACM,YACHC,GAAoBC,EAAAA,EAAAA,IAAmBX,EAAU,SACjDY,EAAUC,IAAWZ,EAAWS,EAAmBH,GAAW,GAAJ,OAAOG,EAAP,YAA4BH,GAAWD,GAAQ,GAAJ,OAAOI,EAAP,YAA4BJ,GAAQJ,GAAW,GAAJ,OAAOQ,EAAP,YAAoCP,GAAY,GAAJ,OAAOO,EAAP,aAAqCN,GAAc,GAAJ,OAAOM,EAAP,eAAuCL,GAAS,GAAJ,OAAOK,EAAP,WAEvRI,GAAqBC,EAAAA,EAAAA,KAAK,SAAD,QAAC,UAAcN,GAAf,IAC7BR,UAAWW,EACXb,IAAKA,KAGP,GAAIS,EAAY,CACd,IAAIQ,EAAkB,GAAH,OAAMN,EAAN,eAMnB,MAJ0B,kBAAfF,IACTQ,EAAkB,GAAH,OAAMA,EAAN,YAAyBR,KAGtBO,EAAAA,EAAAA,KAAK,MAAO,CAC9Bd,UAAWe,EACXC,SAAUH,IAId,OAAOA,K,oBC1BLI,GAAQC,EAAAA,EAAAA,OAAK,WAEb,OADAC,QAAQC,IAAI,6BACL,oDAiFX,MAzEA,WAEI,IAAIC,GAAQC,EAAAA,EAAAA,KAAY,SAACD,GACrB,OAAOA,KAGPE,GAAWC,EAAAA,EAAAA,MAEf,GAA0BC,EAAAA,EAAAA,UAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAsBF,EAAAA,EAAAA,UAAS,GAA/B,eAAOG,EAAP,KAAYC,EAAZ,KASA,OANWC,EAAAA,EAAAA,UAAQ,WAhBnBX,QAAQC,IAAI,wBAoBT,CAACQ,KAGA,4BAEI,SAACX,EAAD,IAECS,EACAE,GACD,mBAAQG,QAAS,kBAAMJ,EAASD,EAAQ,IAAxC,uCACA,mBAAQK,QAAS,kBAAMF,EAAOD,EAAM,IAApC,wCACA,mBACA,0BACKP,EAAMW,KAAKC,KADhB,IACuBZ,EAAMW,KAAKE,IADlC,uCAGA,mBAAQH,QAAS,kBAAMR,GAASY,EAAAA,EAAAA,QAAhC,uCACA,mBAAQJ,QAAS,kBAAMR,GAASa,EAAAA,EAAAA,IAAY,KAA5C,uCACA,UAAC,EAAD,CAAOnC,SAAO,EAACC,UAAQ,EAACE,OAAK,EAA7B,WACI,4BACI,2BACI,gCACA,kCACA,wCAGR,2BACKiB,EAAMgB,KAAKC,KAAI,SAACC,GACb,OACI,2BACI,wBAAKA,EAAKC,MACV,wBAAKD,EAAKN,QACV,wBAAKM,EAAKb,SACV,2BACI,mBACIK,QAAS,WACLR,GAASkB,EAAAA,EAAAA,IAAc,CAAED,GAAID,EAAKC,GAAIE,IAAK,MAFnD,gBAOA,mBACIX,QAAS,WACLR,GAASkB,EAAAA,EAAAA,IAAc,CAAED,GAAID,EAAKC,GAAIE,KAAM,MAFpD,oBAZCH,EAAKC","sources":["../node_modules/react-bootstrap/esm/Table.js","routes/Cart.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import { useMemo } from \"react\";\r\nimport { useState, useEffect, memo } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeName, increaseAge, increaseCount, decreaseCount } from \"../store\";\r\n\r\n// memo로 감싸면 특정 상황에서만 렌더링\r\n// props가 변할 때만 재렌더링됨\r\n// 기존 props와 같은지 비교 작업을 하므로 props가 길고 복잡하면 비교 작업에 시간이 걸림\r\n// 따라서 꼭 필요한 무거운 comp에만 붙일 것\r\n\r\nlet Child = memo(() => {\r\n    console.log(\"재렌더링\");\r\n    return <div>자식 di123v</div>;\r\n});\r\n\r\nfunction ffunc() {\r\n    console.log(\"ffunc 실행\");\r\n    return;\r\n}\r\n\r\nfunction Cart() {\r\n    // redux state 가져오기\r\n    let state = useSelector((state) => {\r\n        return state;\r\n    });\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const [count, setCount] = useState(0);\r\n    const [ccc, setCcc] = useState(0);\r\n\r\n    // useMemo는 필요할 때만 렌더링해줌\r\n    let ress = useMemo(() => {\r\n        ffunc();\r\n        //dependency로 한 번만 실행되게 할 수 있음\r\n        // 혹은 props 변했을 때만\r\n    }, [ccc]);\r\n\r\n    return (\r\n        <div>\r\n            {/* <Child count={count} /> */}\r\n            <Child />\r\n\r\n            {count}\r\n            {ccc}\r\n            <button onClick={() => setCount(count + 1)}>버튼버튼</button>\r\n            <button onClick={() => setCcc(ccc + 1)}>버튼1버튼</button>\r\n            <br />\r\n            <h4>\r\n                {state.user.name}({state.user.age})의 장바구니\r\n            </h4>\r\n            <button onClick={() => dispatch(changeName())}>이름변경</button>\r\n            <button onClick={() => dispatch(increaseAge(2))}>나이변경</button>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>id</th>\r\n                        <th>Name</th>\r\n                        <th>count</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {state.cart.map((item) => {\r\n                        return (\r\n                            <tr key={item.id}>\r\n                                <td>{item.id}</td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.count}</td>\r\n                                <td>\r\n                                    <button\r\n                                        onClick={() => {\r\n                                            dispatch(increaseCount({ id: item.id, num: 1 }));\r\n                                        }}\r\n                                    >\r\n                                        +\r\n                                    </button>\r\n                                    <button\r\n                                        onClick={() => {\r\n                                            dispatch(increaseCount({ id: item.id, num: -1 }));\r\n                                        }}\r\n                                    >\r\n                                        -\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cart;\r\n"],"names":["React","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","Child","memo","console","log","state","useSelector","dispatch","useDispatch","useState","count","setCount","ccc","setCcc","useMemo","onClick","user","name","age","changeName","increaseAge","cart","map","item","id","increaseCount","num"],"sourceRoot":""}